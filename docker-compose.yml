services:
  postgres:
    image: postgres:16-alpine
    restart: on-failure
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - app_network

  backend:
    restart: always
    build:
      context: ./backend
    command: ["sh", "-c", "chmod +x /backend/entrypoint.sh && /backend/entrypoint.sh"]
#    command: gunicorn -w 4 -k uvicorn.workers.UvicornWorker --timeout 300 main:app --bind 0.0.0.0:8000
    working_dir: /backend
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    networks:
      - app_network
    env_file:
      - .env         
      - ./backend/.env  

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  pg_data:
